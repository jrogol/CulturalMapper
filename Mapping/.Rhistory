ggtitle(paste("Density of",top_langs$lang.topic[2],
"Tweets by Day, by Hour")) +
facet_grid(day ~ hour.cut) +
ggsave(paste0("Outputs/",db,"-2ndTopic_hour_Day.png"), width = 11, height = 8.5, units = "in")
library(ggplot2)
library(dplyr)
library(maps)
library(ggmap)
map <- ggmap(get_map(location = bbox, source = "stamen", maptype="toner", color = "bw")) +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks = element_blank())
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(lang.topic == top_langs$lang.topic[1],
source != "Instagram"
)) +
ggtitle(paste("Density of",top_langs$lang.topic[1],
"Tweets by Day, by Hour")) +
facet_grid(day ~ hour.cut) +
ggsave(paste0("Outputs/",db,"-TopTopic_hour_Day.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(lang.topic %in% top_langs$lang.topic[1:6],
source != "Instagram"
)) +
scale_fill_distiller(palette = "Spectral") +
ggtitle(paste("Density of Top 6 Topics, Week vs. Weekends")) +
facet_grid(weekend~lang.topic) +
ggsave(paste0("Outputs/",db,"-TopTopics_weekends.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(lang.topic == top_langs$lang.topic[1],
source != "Instagram"
)) +
ggtitle(paste("Density of",top_langs$lang.topic[1],
"Tweets by Day, by Hour")) +
scale_fill_distiller(palette = "Spectral")+
facet_grid(day ~ hour.cut) +
ggsave(paste0("Outputs/",db,"-TopTopic_hour_Day.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(lang.topic == top_langs$lang.topic[1],
source != "Instagram", day = "Mon"
)) +
ggtitle(paste("Density of",top_langs$lang.topic[1],
"Tweets by Day, by Hour")) +
scale_fill_distiller(palette = "Spectral")+
facet_grid(~ hour.cut) +
ggsave(paste0("Outputs/",db,"-TopTopic_hour_MON.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(lang.topic == top_langs$lang.topic[1],
source != "Instagram", day == "Mon"
)) +
ggtitle(paste("Density of",top_langs$lang.topic[1],
"Tweets by Day, by Hour")) +
scale_fill_distiller(palette = "Spectral")+
facet_grid(~ hour.cut) +
ggsave(paste0("Outputs/",db,"-TopTopic_hour_MON.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(lang.topic == top_langs$lang.topic[1],
source != "Instagram", day == "Mon"
)) +
ggtitle(paste("Density of",top_langs$lang.topic[1],
"Tweets by Hour in",db,"on Mondays")) +
scale_fill_distiller(palette = "Spectral")+
facet_grid(~ hour.cut) +
ggsave(paste0("Outputs/",db,"-TopTopic_hour_MON.png"), width = 11, height = 8.5, units = "in")
rm(list = ls())
load(file = "Data/ISTData.RData")
source("IST_meta.R")
source('Postgres_functions.R')
source('HullFunctions.R')
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic),
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[1:6])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour")) +
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
table(clean.topics$day,clean.topics$hour.cut)
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic),
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[1:6])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour")) +
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic),
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[1:6])) +
facet_grid( ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour")) +
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic),
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[1:6])) +
facet_grid(day ~ ) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour")) +
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic),
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[1:6])) +
facet_grid( ~ day) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour")) +
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
View(top_langs)
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic),
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[1:5])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour")) +
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic),
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[1])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour")) +
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
clean <- merge_langs(data)
clean.topics <- merge_topics(clean, "Topic_Data/")
source("SpatialUtil.R")
meters <- LongLatToM(clean.topics$long,clean.topics$lat,epsg)
topic_meters <- cbind(clean.topics,meters)
library(dplyr)
library(ggmap)
library(ggplot2)
map +
ggtitle(paste("Density of",all_langs$language[1],"Tweets on New Year's Eve from 12am-4am")) +
geom_point(aes(x = long, y = lat, color = lang.topic),
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz >= "2016-12-31",
tz <= "2017-01-01"
),  alpha = .1) +
stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz >= "2016-12-31",
tz <= "2017-01-01"
)) + theme(legend.position = "none") +
scale_fill_distiller(palette = "Spectral") +
ggsave(paste0("Outputs/",db,"-TopLangNYE.png"), width = 11, height = 8.5, units = "in")
strftime("2016-12-31")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz < strftime("2016-12-31"),
tz > strftime("2017-01-01")
)) +
scale_fill_distiller(palette = "Spectral") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunNoNYE.png"), width = 11, height = 8.5, units = "in")
1
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
#tz < strftime("2016-12-31"),
tz > strftime("2017-01-01")
)) +
scale_fill_distiller(palette = "Spectral") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunNoNYE.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz < strftime("2016-12-31") &
tz > strftime("2017-01-02")
)) +
scale_fill_distiller(palette = "Spectral") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunNoNYE.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz < strftime("2016-12-31") |
tz > strftime("2017-01-02")
)) +
scale_fill_distiller(palette = "Spectral") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunNoNYE.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz < strftime("2016-12-31") |
tz > strftime("2017-01-02")
))  +
geom_point(aes(x = long, y = lat, color = lang.topic),
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz < strftime("2016-12-31"),
tz > strftime("2017-01-01")
))+
scale_fill_distiller(palette = "Spectral") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunNoNYE.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz <= strftime("2016-12-30") |
tz => strftime("2017-01-02")
))  +
geom_point(aes(x = long, y = lat, color = lang.topic),
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz <= strftime("2016-12-30"),
tz => strftime("2017-01-02")
))+
scale_fill_distiller(palette = "Spectral") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunNoNYE.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz <= strftime("2016-12-30") |
tz >= strftime("2017-01-02")
))  +
geom_point(aes(x = long, y = lat, color = lang.topic),
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz <= strftime("2016-12-30"),
tz >= strftime("2017-01-02")
))+
scale_fill_distiller(palette = "Spectral") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunNoNYE.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz == strftime("2016-12-09")
))  +
geom_point(aes(x = long, y = lat, color = lang.topic),
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz == strftime("2016-12-09")
))+
scale_fill_distiller(palette = "Spectral") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunOther.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz == strftime("2016-12-09")
))  +
geom_point(aes(x = long, y = lat, color = lang.topic),
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz == strftime("2016-12-16")
))+
scale_fill_distiller(palette = "Spectral") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunOther.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz == strftime("2016-12-09")
))  +
geom_point(aes(x = long, y = lat, color = lang.topic),
data = clean.topics %>% filter(user_language == all_langs$language[1],
source != "Instagram",
hour.cut == "8pm-12am",
tz <= strftime("2016-10-31"),
day == "Sun"
))+
scale_fill_distiller(palette = "Spectral") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunOther.png"), width = 11, height = 8.5, units = "in")
map + stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1:6],
source != "Instagram",
hour.cut == "8pm-12am",
tz == strftime("2016-12-09")
))  +
geom_point(aes(x = long, y = lat, color = lang.topic),
data = clean.topics %>% filter(user_language == all_langs$language[1:6],
source != "Instagram",
hour.cut == "8pm-12am",
tz <= strftime("2016-10-31"),
day == "Sun"
))+
scale_fill_distiller(palette = "Spectral") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunOther.png"), width = 11, height = 8.5, units = "in")
map +
geom_point(aes(x = long, y = lat, color = lang.topic), alpha = .1
data = clean.topics %>% filter(user_language == all_langs$language[1:6],
source != "Instagram",
hour.cut == "8pm-12am",
tz <= strftime("2016-01-01"),
day == "Sun"
)) +
stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1:6],
source != "Instagram",
hour.cut == "8pm-12am",
tz != strftime("2017-01-01"),
day == "Sun"
))+
scale_fill_distiller(palette = "Spectral") +
theme(legend.position = "none") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunOther.png"), width = 11, height = 8.5, units = "in")
map +
geom_point(aes(x = long, y = lat, color = lang.topic), alpha = .1,
data = clean.topics %>% filter(user_language == all_langs$language[1:6],
source != "Instagram",
hour.cut == "8pm-12am",
tz != strftime("2016-01-01"),
day == "Sun"
)) +
stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1:6],
source != "Instagram",
hour.cut == "8pm-12am",
tz != strftime("2017-01-01"),
day == "Sun"
))+
scale_fill_distiller(palette = "Spectral") +
theme(legend.position = "none") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunOther.png"), width = 11, height = 8.5, units = "in")
map +
geom_point(aes(x = long, y = lat, color = lang.topic), alpha = .1,
data = clean.topics %>% filter(user_language == all_langs$language[1:6],
source != "Instagram",
hour.cut == "8pm-12am",
tz != strftime("2016-01-01"),
day == "Sun"
)) +
stat_density2d(aes(x = long, y = lat,
fill = ..level..), geom = "polygon",
n = grid.points,
data = clean.topics %>% filter(user_language == all_langs$language[1:6],
source != "Instagram",
hour.cut == "8pm-12am",
tz != strftime("2017-01-01"),
day == "Sun"
))+
scale_fill_distiller(palette = "Spectral") +
theme(legend.position = "none") +
ggtitle(paste("Density of",all_langs$language[1],
"Tweets on Sundays (not including New Year's) from 12am-4am")) +
ggsave(paste0("Outputs/",db,"-TopLangSunNoNYE.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic),
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[1:6])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour")) +
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic),
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[6])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour")) +
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic),
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[5:6])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour")) +
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic),
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[2:6])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour")) +
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic), alpha = .5,
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[5:6])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour"))  +
guides(size = guide_legend("Topics")) +
theme(legend.position = "bottom", legend.box = "horizontal")+
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic), alpha = .5,
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[5:6])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour"))  +
scale_fill_brewer(palette = "Set1",name ="Topics") +
theme(legend.position = "bottom", legend.box = "horizontal")+
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1") +
geom_density2d(aes(x = long, y = lat, color = lang.topic), alpha = .5,
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[6])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour"))  +
scale_fill_brewer(palette = "Set1",name ="Topics") +
theme(legend.position = "bottom", legend.box = "horizontal")+
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1", name ="Topics") +
geom_density2d(aes(x = long, y = lat, color = lang.topic), alpha = .5,
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[5:6])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour"))  +
theme(legend.position = "bottom", legend.box = "horizontal")+
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1", name ="Topics") +
geom_density2d(aes(x = long, y = lat, color = lang.topic), alpha = .5,
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[1])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour"))  +
theme(legend.position = "bottom", legend.box = "horizontal")+
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHour.png"), width = 11, height = 8.5, units = "in")
map + scale_color_brewer(palette = "Set1", name ="Topics") +
geom_density2d(aes(x = long, y = lat, color = lang.topic), alpha = .5,
n = grid.points,
data = clean.topics %>% filter(source != "Instagram",
lang.topic %in% top_langs$lang.topic[1:6])) +
facet_grid(day ~ hour.cut) +
ggtitle(paste("Densities of Top 6 Topics in",db,"by Day by Hour"))  +
theme(legend.position = "bottom", legend.box = "horizontal")+
ggsave(paste0("Outputs/",db,"-TopicDensity_DayHourALL.png"), width = 11, height = 8.5, units = "in")
