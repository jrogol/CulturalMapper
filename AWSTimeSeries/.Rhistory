activityPerUser
df <- as.data.frame(matrix(NA, nrow = ncol(counts)-1, ncol(counts)))
names(df) <- c("topic",names(counts)[-1])
# Insert the correlations (i.e. lag 0)
for (i in 2:ncol(activityPerUser)){
df[i-1,1] <- names(activityPerUser)[i]
for (j in 2:ncol(activityPerUser)){
df[i-1,j] <- cor(activityPerUser[[i]],activityPerUser[[j]])
}
}
clusters <- hclust(as.dist(df[,-1]))
plot(clusters,  labels = df[,1])
norm.clust <- cutree(clusters, k =5)
library(sparcl)
# colors the leaves of a dendrogram
y = cutree(clusters, k = 5)
ColorDendrogram(clusters, y = y, labels = names(y), main = "Dendrogram of Top 20 Topics in Istanbul",
xlab = "Topics", sub = "",
branchlength = .2)
rbind(clust, norm.clust)
df <- as.data.frame(matrix(NA, nrow = ncol(activityPerUser)-1, ncol(activityPerUser)))
names(df) <- c("topic",names(activityPerUser)[-1])
# Insert the correlations (i.e. lag 0)
for (i in 2:ncol(activityPerUser)){
df[i-1,1] <- names(activityPerUser)[i]
for (j in 2:ncol(activityPerUser)){
df[i-1,j] <- cor(activityPerUser[[i]],activityPerUser[[j]])
}
}
# Create clusters using the correlations as the distance metric
clusters <- hclust(as.dist(df[,-1]))
plot(clusters,  labels = df[,1])
# Five clusters
norm.clust <- cutree(clusters, k =5)
# install.packages('sparcl')
library(sparcl)
# colors the leaves of a dendrogram
y = cutree(clusters, k = 5)
ColorDendrogram(clusters, y = y, labels = names(y), main = "Dendrogram of Top 20 Topics in Istanbul",
xlab = "Topics", sub = "",
branchlength = .2)
# Are they similar?
rbind(clust, norm.clust)
head(counts)
head(activityPerUser)
activityPerUser <- left_join(tweetcount,unique.users, by ="lang.topic") %>%
rename(tweets = n ) %>%
mutate(PerUser = tweets/users) %>%
select(date, lang.topic, PerUser)
activityPerUser
activityPerUser <- left_join(tweetcount,unique.users, by ="lang.topic") %>%
rename(tweets = n ) %>%
mutate(PerUser = tweets/users) #%>%
activityPerUser
2558/21200
27343/104193
activityPerUser <- left_join(tweetcount,unique.users, by ="lang.topic") %>%
rename(tweets = n ) %>%
mutate(PerUser = tweets/users) %>%
select(date, lang.topic, PerUser)
activityPerUser <- activityPerUser %>%
spread(lang.topic,PerUser) %>%
arrange(date)
df <- as.data.frame(matrix(NA, nrow = ncol(counts)-1, ncol(counts)))
names(df) <- c("topic",names(counts)[-1])
# Insert the correlations (i.e. lag 0)
for (i in 2:ncol(counts)){
df[i-1,1] <- names(counts)[i]
for (j in 2:ncol(counts)){
df[i-1,j] <- cor(counts[[i]],counts[[j]])
}
}
# Create clusters using the correlations as the distance metric
clusters <- hclust(as.dist(df[,-1]))
plot(clusters,  labels = df[,1])
# Five clusters
clust <- cutree(clusters, k =5)
# install.packages('sparcl')
library(sparcl)
# colors the leaves of a dendrogram
y = cutree(clusters, k = 5)
ColorDendrogram(clusters, y = y, labels = names(y), main = "Dendrogram of Languages",
xlab = "Topics", sub = "",
branchlength = .2)
# Working on normalizing tweets per user
tweetcount <- clean.topics %>%
mutate(date = as.Date(date,"%d %b %Y")) %>%
filter(!(lang.topic %in% registry$language)) %>%
filter(!is.na(lang.topic)) %>%
group_by(date, lang.topic) %>% count
activityPerUser <- left_join(tweetcount,unique.users, by ="lang.topic") %>%
rename(tweets = n ) %>%
mutate(PerUser = tweets/users) %>%
select(date, lang.topic, PerUser)
activityPerUser <- activityPerUser %>%
spread(lang.topic,PerUser) %>%
arrange(date)
# Initialize the Data Frame
df2 <- as.data.frame(matrix(NA, nrow = ncol(activityPerUser)-1, ncol(activityPerUser)))
names(df2) <- c("topic",names(activityPerUser)[-1])
# Insert the correlations (i.e. lag 0)
for (i in 2:ncol(activityPerUser)){
df2[i-1,1] <- names(activityPerUser)[i]
for (j in 2:ncol(activityPerUser)){
df2[i-1,j] <- cor(activityPerUser[[i]],activityPerUser[[j]])
}
}
# Create clusters using the correlations as the distance metric
clusters <- hclust(as.dist(df[,-1]))
plot(clusters,  labels = df[,1])
# Five clusters
norm.clust <- cutree(clusters, k =5)
# install.packages('sparcl')
library(sparcl)
# colors the leaves of a dendrogram
y = cutree(clusters, k = 5)
ColorDendrogram(clusters, y = y, labels = names(y), main = "Dendrogram of Top 20 Topics in Istanbul",
xlab = "Topics", sub = "",
branchlength = .2)
# Are they similar?
rbind(clust, norm.clust)
clusters2 <- hclust(as.dist(df[,-1]))
par(mfrow=c(2,1))
plot(clusters2,  labels = df2[,1])
plot(clusters,  labels = df[,1])
clusters2 <- hclust(as.dist(df2[,-1]))
plot(clusters2,  labels = df2[,1])
par(mfrow=c(2,1))
plot(clusters2,  labels = df2[,1])
plot(clusters,  labels = df[,1])
dev.off()
png(res = 300)
plot(clusters,  labels = df[,1])
dev.off()
?png
png(res = 300)
plot(clusters,  labels = df[,1])
dev.off()
png()
plot(clusters,  labels = df[,1])
dev.off()
clean.topics%>% head
View(merge_topics)
head(read.csv("Topic_Data/English_LA.csv"))
counts <- clean.topics %>%
mutate(date = as.Date(date,"%d %b %Y")) %>%
filter(!(lang.topic %in% registry$language)) %>%
filter(!is.na(lang.topic)) %>%
group_by(date, lang.topic) %>% count
head(counts)
counts <- clean.topics %>%
mutate(date = as.Date(date,"%d %b %Y")) %>%
filter(!(lang.topic %in% registry$language)) %>%
filter(!is.na(lang.topic)) %>%
group_by(date, lang.topic) %>% count
head(counts)
counts <- counts %>%
spread(lang.topic,n) %>%
arrange(date)
head(counts)
plot.ts(counts$date,counts$`Topic 0 - Turkish`)
unique.users
head(counts)
head(clean.topics)
coefs
paste0(coefs$p[1],
coefs$d[1],
coefs$q[1])
paste0(coefs$p[1],",",
coefs$d[1],",",
coefs$q[1])
unique(clean.topics$source)
for (i in 1:nrow(coefs){
print(i)
}
for (i in 1:nrow(coefs){
print(i)
}
for (i in 1:nrow(coefs)){
print(i)
}
for (i in 1:nrow(coefs)){
print(paste0(coefs$p[1],",",
coefs$d[1],",",
coefs$q[1]))
}
for (i in 1:nrow(coefs)){
print(paste0(coefs$p[i],",",
coefs$d[i],",",
coefs$q[i]))
}
for (i in 1:nrow(coefs)){
print(paste0("ARIMA(",coefs$p[i],",",
coefs$d[i],",",
coefs$q[i],")"))
}
coefs$q[i],")")
coefs$model <- paste0("ARIMA(",coefs$p,",",
coefs$d,",",
coefs$q,")")
head(coefs)
head(coefs) %>% select(topic, model)
coefs %>% select(topic,p,d,q) %>%
rename(AR = p, Difference = d, MA = q) %>% head
coefs %>% select(topic,p,d,q) %>%
head
rm(m2)
