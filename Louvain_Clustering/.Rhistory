p = 1 - exp(2.833227)
p
yS <- log(nk.S/(sum(S)*factorial(n-kS-1)/(factorial(n-1)*factorial(kS))))
plot(kS, yS, xlab = "k", ylab = "phi(nk*)")
yS <- log(nk.S/(sum(S)*factorial(n)/(factorial(n-kS)*factorial(kS))))
plot(kS, yS, xlab = "k", ylab = "phi(nk*)")
run.rrline(kS, yS, iter = 5)
abline(-5.856616, -0.7402554,col = 2)
kS<- c(1,2,3,4,5,6,7,8,9,10)
S<-c(9674,  4351,  2275, 1260,  663,  355, 154,  72,  37,  14)
n <- length(S)
nk.S <- S - 0.67 - 0.8*S/sum(S)
yS <- log(nk.S/(sum(S)*factorial(n)/(factorial(n-kS)*factorial(kS))))
plot(kS, yS, xlab = "k", ylab = "phi(nk*)")
kS<- c(1,2,3,4,5,6,7,8,9,10,11)
S<-c(9674,  4351,  2275, 1260,  663,  355, 154,  72,  37,  14, 6)
n <- length(S)
nk.S <- S - 0.67 - 0.8*S/sum(S)
yS <- log(nk.S/(sum(S)*factorial(n)/(factorial(n-kS)*factorial(kS))))
plot(kS, yS, xlab = "k", ylab = "phi(nk*)")
run.rrline(kS, yS, iter = 5)
kS<- c(1,2,3,4,5,6,7,8,9,10,11, 12, 13, 14)
S<-c(9674,  4351,  2275, 1260,  663,  355, 154,  72,  37,  14, 6,  2,  0,  1)
n <- length(S)
nk.S <- S - 0.67 - 0.8*S/sum(S)
yS <- log(nk.S/(sum(S)*factorial(n)/(factorial(n-kS)*factorial(kS))))
kS<- c(1,2,3,4,5,6,7,8)
S<-c(9674,  4351,  2275, 1260,  663,  355, 154,  72)
n <- length(S)
nk.S <- S - 0.67 - 0.8*S/sum(S)
yS <- log(nk.S/(sum(S)*factorial(n)/(factorial(n-kS)*factorial(kS))))
plot(kS, yS, xlab = "k", ylab = "phi(nk*)")
kS<- c(1,2,3,4,5,6,7,8,9,10,11, 12, 13, 14)
S<-c(9674,  4351,  2275, 1260,  663,  355, 154,  72,  37,  14,  6,  2,  0,  1)
n <- length(S)
nk.S <- S - 0.67 - 0.8*S/sum(S)
yS <- log(nk.S/(sum(S)*factorial(n)/(factorial(n-kS)*factorial(kS))))
plot(kS, yS, xlab = "k", ylab = "phi(nk*)")
run.rrline(kS, yS, iter = 5)
abline(-5.856616, -0.7402554,col = 2)
1 - exp(-0.7860525)
p <- 1 - exp(-0.7860525)
par(mfrow=c(2,2))
n <- 0.9
p <- 1 - exp(-0.7860525)
yy <- 14*log(p) + kS*log(1-p)
yy <- 14*log(p/(p-1)) + kS*log(1-p)
p <- exp(-0.7402554)/(exp(-0.7402554) + 1)
p
yy <- kS*log(p/(p-1)) + 14*log(1-p)
yy <- kS*log(p/(1-p)) + 14*log(1-p)
plot(kk, yy, xlab = "k", ylab = "k*log(p/(1-p)) + 14*log(1-p)",main = "Neg. Binomial n = 0.9 Plot")
plot(kS, yy, xlab = "k", ylab = "k*log(p/(1-p)) + 14*log(1-p)",main = "Neg. Binomial n = 0.9 Plot")
run.rrline(kS, yy, iter = 5)
abline(-5.460107, -0.7402554,col = 2)
par(mfrow=c(2,2))
n <- 0.75
p <- exp(-0.7402554)/(exp(-0.7402554) + 1)
yy <- kS*log(p/(1-p)) + 14*log(1-p)
plot(kS, yy, xlab = "k", ylab = "k*log(p/(1-p)) + 14*log(1-p)",main = "Neg. Binomial n = 0.75 Plot")
run.rrline(kS, yy, iter = 5)
n <- 0.75
p <- exp(-0.7402554)/(exp(-0.7402554) + 1)
yy <- kS*log(p/(1-p)) + n*log(1-p)
plot(kS, yy, xlab = "k", ylab = "k*log(p/(1-p)) + 14*log(1-p)",main = "Neg. Binomial n = 0.75 Plot")
run.rrline(kS, yy, iter = 5)
par(mfrow=c(2,2))
n <- 0.75
p <- exp(-0.7402554)/(exp(-0.7402554) + 1)
yy <- kS*log(p/(1-p)) + n*log(1-p)
plot(kS, yy, xlab = "k", ylab = "k*log(p/(1-p)) + 14*log(1-p)",main = "Neg. Binomial n = 0.75 Plot")
run.rrline(kS, yy, iter = 5)
abline(-0.2925057, -0.7402554,col = 2)
par(mfrow=c(2,2))
n <- 0.5
p <- exp(-0.7402554)/(exp(-0.7402554) + 1)
yy <- kS*log(p/(1-p)) + n*log(1-p)
plot(kS, yy, xlab = "k", ylab = "k*log(p/(1-p)) + 14*log(1-p)",main = "Neg. Binomial n = 0.5 Plot")
run.rrline(kS, yy, iter = 5)
par(mfrow=c(2,2))
n <- 0.75
p <- exp(-0.7402554)/(exp(-0.7402554) + 1)
yy <- kS*log(p/(1-p)) + n*log(1-p)
plot(kS, yy, xlab = "k", ylab = "k*log(p/(1-p)) + 14*log(1-p)",main = "Neg. Binomial n = 0.75 Plot")
run.rrline(kS, yy, iter = 5)
n <- 0.5
p <- exp(-0.7402554)/(exp(-0.7402554) + 1)
yy <- kS*log(p/(1-p)) + n*log(1-p)
plot(kS, yy, xlab = "k", ylab = "k*log(p/(1-p)) + 14*log(1-p)",main = "Neg. Binomial n = 0.5 Plot")
run.rrline(kS, yy, iter = 5)
par(mfrow=c(2,2))
n <- 0.75
p <- exp(-0.7402554)/(exp(-0.7402554) + 1)
yy <- kS*log(p/(1-p)) + n*log(1-p)
plot(kS, yy, xlab = "k", ylab = "k*log(p/(1-p)) + 14*log(1-p)",main = "Neg. Binomial n = 0.75 Plot")
run.rrline(kS, yy, iter = 5)
abline(-0.2925057, -0.7402554,col = 2)
n <- 0.5
p <- exp(-0.7402554)/(exp(-0.7402554) + 1)
yy <- kS*log(p/(1-p)) + n*log(1-p)
plot(kS, yy, xlab = "k", ylab = "k*log(p/(1-p)) + 14*log(1-p)",main = "Neg. Binomial n = 0.5 Plot")
run.rrline(kS, yy, iter = 5)
abline(-0.1950038, -0.7402554,col = 2)
n <- 0.25
p <- exp(-0.7402554)/(exp(-0.7402554) + 1)
yy <- kS*log(p/(1-p)) + n*log(1-p)
plot(kS, yy, xlab = "k", ylab = "k*log(p/(1-p)) + 14*log(1-p)",main = "Neg. Binomial n = 0.25 Plot")
run.rrline(kS, yy, iter = 5)
abline(-0.09750191, -0.7402554,col = 2)
kW<- c(1,2,3,4,5,6,7)
W<-c(65,    26,    12,   10,    5,    3,   1)
n <- length(W)
nk.W <- W - 0.67 - 0.8*W/sum(W)
yS <- log(nk.W/(sum(W)*factorial(n)/(factorial(n-kW)*factorial(kW))))
plot(kW, yW, xlab = "k", ylab = "phi(nk*)")
plot(kW, yS, xlab = "k", ylab = "phi(nk*)")
run.rrline(kW, yW, iter = 5)
plot(kW, yS, xlab = "k", ylab = "phi(nk*)")
run.rrline(kW, yS, iter = 5)
yS <- log(nk.W/(sum(W)*factorial(n-kW-1)/(factorial(n-1)*factorial(kW))))
plot(kW, yS, xlab = "k", ylab = "phi(nk*)")
run.rrline(kW, yS, iter = 5)
1 - exp(1.693985)
yS <- log(nk.W/(sum(W)*factorial(n)/(factorial(n-kW)*factorial(kW))))
plot(kW, yS, xlab = "k", ylab = "phi(nk*)")
run.rrline(kW, yS, iter = 5)
abline(-3.69742, -0.4629436,col = 2)
exp(-0.4629436)/(exp(-0.4629436) + 1)
par(mfrow=c(2,2))
n <- 0.75
p <- 0.3862878
yy <- kW*log(p/(1-p)) + n*log(1-p)
plot(kW, yy, xlab = "k", ylab = "k*log(p/(1-p)) + n*log(1-p)",main = "Binomial n = 0.75 Plot")
run.rrline(kS, yy, iter = 5)
par(mfrow=c(2,2))
n <- 0.75
p <- 0.3862878
yy <- kW*log(p/(1-p)) + n*log(1-p)
plot(kW, yy, xlab = "k", ylab = "k*log(p/(1-p)) + n*log(1-p)",main = "Binomial n = 0.75 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.3661719, -0.4629434,col = 2)
n <- 0.5
p <- 0.3862878
yy <- kW*log(p/(1-p)) + n*log(1-p)
plot(kW, yy, xlab = "k", ylab = "k*log(p/(1-p)) + n*log(1-p)",main = "Binomial n = 0.5 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.2441146, -0.4629434,col = 2)
n <- 0.25
p <- 0.3862878
yy <- kW*log(p/(1-p)) + n*log(1-p)
plot(kW, yy, xlab = "k", ylab = "k*log(p/(1-p)) + n*log(1-p)",main = "Binomial n = 0.25 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.1220573, -0.4629434,col = 2)
kS<- c(1,2,3,4,5,6,7,8,9,10,11, 12, 13, 14)
S<-c(9674,  4351,  2275, 1260,  663,  355, 154,  72,  37,  14,  6,  2,  0,  1)
n <- length(W)
nk.W <- W - 0.67 - 0.8*W/sum(W)
yS <- log(nk.W/(sum(W)*factorial(n + kW-1)/(factorial(n-1)*factorial(kW))))
plot(kW, yS, xlab = "k", ylab = "phi(nk*)")
plot(kW, yS, xlab = "k", ylab = "phi(nk*)")
kS<- c(1,2,3,4,5,6,7,8,9,10,11, 12, 13, 14)
S<-c(9674,  4351,  2275, 1260,  663,  355, 154,  72,  37,  14,  6,  2,  0,  1)
n <- length(S)
nk.S <- S - 0.67 - 0.8*S/sum(S)
yS <- log(nk.S/(sum(S)*factorial(n + kS-1)/(factorial(n-1)*factorial(kS))))
plot(kS, yS, xlab = "k", ylab = "phi(nk*)")
run.rrline(kS, yS, iter = 5)
abline(-2.8672, -1.84641,col = 2)
1 - exp(-1.84641)
par(mfrow=c(2,2))
n <- 0.25
p <- 0.84219
yy <- kW*log(1-p) + n*log(p)
plot(kW, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Binomial n = 0.25 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.04293741, -1.846364,col = 2)
n <- 0.5
p <- 0.842197
yy <- kW*log(1-p) + n*log(p)
plot(kW, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Binomial n = 0.5 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.08587066, -1.846364,col = 2)
n <- 0.75
p <- 0.842197
yy <- kW*log(1-p) + n*log(p)
plot(kW, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Binomial n = 0.75 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.08587066, -1.846364,col = 2)
abline(-0.128806, -1.846364,col = 2)
par(mfrow=c(2,2))
n <- 0.75
p <- 0.842197
yy <- kW*log(1-p) + n*log(p)
plot(kW, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Binomial n = 0.75 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.128806, -1.846364,col = 2)
par(mfrow=c(2,2))
n <- 0.75
p <- 0.842197
yy <- kW*log(1-p) + n*log(p)
plot(kW, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Neg. Binomial n = 0.75 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.128806, -1.846364,col = 2)
par(mfrow=c(2,2))
n <- 0.5
p <- 0.842197
yy <- kW*log(1-p) + n*log(p)
plot(kW, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Neg. Binomial n = 0.5 Plot")
run.rrline(kW, yy, iter = 5)
par(mfrow=c(2,2))
n <- 0.75
p <- 0.842197
yy <- kW*log(1-p) + n*log(p)
plot(kW, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Neg. Binomial n = 0.75 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.128806, -1.846364,col = 2)
n <- 0.5
p <- 0.842197
yy <- kW*log(1-p) + n*log(p)
plot(kW, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Neg. Binomial n = 0.5 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.08587066, -1.846364,col = 2)
n <- 0.25
p <- 0.842197
yy <- kW*log(1-p) + n*log(p)
plot(kW, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Neg. Binomial n = 0.25 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.04293533, -1.846364,col = 2)
kW<- c(1,2,3,4,5,6,7)
W<-c(65,    26,    12,   10,    5,    3,   1)
n <- length(W)
nk.W <- W - 0.67 - 0.8*W/sum(W)
yS <- log(nk.W/(sum(W)*factorial(n)/(factorial(n-kW)*factorial(kW))))
yS <- log(nk.W/(sum(W)*factorial(n + kW-1)/(factorial(n-1)*factorial(kW))))
yS <- log(nk.W/(sum(W)*factorial(n)/(factorial(n-kW)*factorial(kW))))
yS <- log(nk.W/(sum(W)*factorial(n + kW-1)/(factorial(n-1)*factorial(kW))))
plot(kW, yS, xlab = "k", ylab = "phi(nk*)")
run.rrline(kW, yS, iter = 5)
abline(-1.256024, -1.667231,col = 2)
1 â€“ exp(-1.667231)
1 - exp(-1.667231)
par(mfrow=c(2,2))
n <- 0.75
p <- 0.811231
yy <- kW*log(1-p) + n*log(p)
plot(kW, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Neg. Binomial n = 0.75 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.1569018, -1.667231,col = 2)
n <- 0.5
p <- 0.811231
yy <- kW*log(1-p) + n*log(p)
plot(kW, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Neg. Binomial n = 0.5 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.1046012, -1.667231,col = 2)
n <- 0.25
p <- 0.811231
yy <- kW*log(1-p) + n*log(p)
plot(kW, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Neg. Binomial n = 0.25 Plot")
run.rrline(kW, yy, iter = 5)
abline(-0.05230061, -1.667231,col = 2)
n <- length(H)
nk.H <- H - 0.67 - 0.8*H/sum(H)
yS <- log(nk.H/(sum(H)*factorial(n + kH-1)/(factorial(n-1)*factorial(kH))))
plot(kH, yS, xlab = "k", ylab = "phi(nk*)")
plot(kH, yS, xlab = "k", ylab = "phi(nk*)")
run.rrline(kW, yS, iter = 5)
run.rrline(kH, yS, iter = 5)
abline(-4.110501, -1.742657,col = 2)
1 â€“ exp(-1.742657)
1 - exp(-1.742657)
par(mfrow=c(2,2))
n <- 0.75
p <- 0.8249453
yy <- kH*log(1-p) + n*log(p)
plot(kW, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Neg. Binomial n = 0.75 Plot")
run.rrline(kW, yy, iter = 5)
par(mfrow=c(2,2))
n <- 0.75
p <- 0.8249453
yy <- kH*log(1-p) + n*log(p)
plot(kH, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Neg. Binomial n = 0.75 Plot")
run.rrline(kH, yy, iter = 5)
abline(-0.1443286, -1.742657,col = 2)
n <- 0.5
p <- 0.8249453
yy <- kH*log(1-p) + n*log(p)
plot(kH, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Neg. Binomial n = 0.5 Plot")
run.rrline(kH, yy, iter = 5)
abline(-0.0962191, -1.742657,col = 2)
n <- 0.25
p <- 0.8249453
yy <- kH*log(1-p) + n*log(p)
plot(kH, yy, xlab = "k", ylab = "k*log(1-p) + n*log(p)",main = "Neg. Binomial n = 0.25 Plot")
run.rrline(kH, yy, iter = 5)
abline(-0.04810955, -1.742657,col = 2)
k =   c(1,   2,   3,   4,  5,  6,  7,  8,  9, 10, 11)
nk =  c(77,  35,  29,  16,  3,  4,  4,  1,  0,  1,  3)
nk_new <-nk - 0.67 - 0.8*nk/sum(nk)
N <- sum(nk)
y <- log(k*nk_new/N)
plot(k,y,xlab = "k", ylab = "log(k* nk*/N)"))
plot(k,y,xlab = "k", ylab = "log(k* nk*/N)")
run.rrline(k, y, iter = 5)
abline(-0.02417488, -0.3805788,col = 2)
exp(-0.3805788 )
y = -log(-log(1-0.8)) + k*log(0.8)
plot(k,y,xlab = "k", ylab = "log(k* nk*/N)")
run.rrline(k, y, iter = 5)
abline(-0.475885, -0.2231436,col = 2)
k <- c(0, 1,   2,   3,   4,   5,   6)
Argentina  <- c(46, 15,   5,   3,   5,   1,   1)
nk.A <- Argentina - 0.67 - 0.8*Argentina/sum(Argentina)
ll <- length(Argentina)
yA <- log(nk.A/(sum(Argentina)*factorial(ll + k-1)/(factorial(ll-1)*factorial(k))))
plot(k, yA,xlab = "k", ylab = "log(nk*/N*combn(n,k)", main = "")
run.rrline(k, yA, iter = 5)
abline(-1.649865, -1.975503,col = 2)
plot(k, yA,xlab = "k", ylab = "log(nk*/N*combn(n+k-1,k)", main = "")
run.rrline(k, yA, iter = 5)
abline(-1.649865, -1.975503,col = 2)
1 â€“ exp(-1.975503)
1 - exp(-1.975503)
p <- 1 - exp(-1.975503)
par(mfrow=c(2,2))
n <- 0.75
p <- 0.8613085
yy.NegArg <- n*log(p) + k*log(1-p)
plot(k, yy.NegArg, xlab = "k", ylab = "log(p) + k*log(1-p))",main = "Neg. Binomial n = 0.25 Plot - Argentina")
run.rrline(k, yy.NegArg, iter = 5)
abline(-0.1119769, -1.975503,col = 2)
par(mfrow=c(2,2))
n <- 0.75
p <- 0.8613085
yy.NegArg <- n*log(p) + k*log(1-p)
plot(k, yy.NegArg, xlab = "k", ylab = "log(p) + k*log(1-p))",main = "Neg. Binomial n = 0.75 Plot - Argentina")
run.rrline(k, yy.NegArg, iter = 5)
abline(-0.1119769, -1.975503,col = 2)
n <- 0.5
p <- 0.8613085
yy.NegArg <- n*log(p) + k*log(1-p)
plot(k, yy.NegArg, xlab = "k", ylab = "log(p) + k*log(1-p))",main = "Neg. Binomial n = 0.5 Plot - Argentina")
run.rrline(k, yy.NegArg, iter = 5)
abline(-0.07465127, -1.178119,col = 2)
n <- 0.25
p <- 0.8613085
yy.NegArg <- n*log(p) + k*log(1-p)
plot(k, yy.NegArg, xlab = "k", ylab = "log(p) + k*log(1-p))",main = "Neg. Binomial n = 0.25 Plot - Argentina")
run.rrline(k, yy.NegArg, iter = 5)
abline(-0.03732563, -1.178119,col = 2)
par(mfrow=c(2,2))
n <- 0.75
p <- 0.8613085
yy.NegArg <- n*log(p) + k*log(1-p)
plot(k, yy.NegArg, xlab = "k", ylab = "log(p) + k*log(1-p))",main = "Neg. Binomial n = 0.75 Plot - Argentina")
run.rrline(k, yy.NegArg, iter = 5)
abline(-0.1119769, -1.975503,col = 2)
n <- 0.5
p <- 0.8613085
yy.NegArg <- n*log(p) + k*log(1-p)
plot(k, yy.NegArg, xlab = "k", ylab = "log(p) + k*log(1-p))",main = "Neg. Binomial n = 0.5 Plot - Argentina")
run.rrline(k, yy.NegArg, iter = 5)
abline(-0.07465127, -1.975503,col = 2)
n <- 0.25
p <- 0.8613085
yy.NegArg <- n*log(p) + k*log(1-p)
plot(k, yy.NegArg, xlab = "k", ylab = "log(p) + k*log(1-p))",main = "Neg. Binomial n = 0.25 Plot - Argentina")
run.rrline(k, yy.NegArg, iter = 5)
abline(-0.03732563, -1.975503,col = 2)
Turkey <- c(60,   9,   4,   2,   1)
nk.T <- Turkey - 0.67 - 0.8*Turkey/sum(Turkey)
ll.T <- length(Turkey)
yT <- log(nk.T/(sum(Turkey)*factorial(ll.T + k-1)/(factorial(ll-1)*factorial(k))))
k <- c(0, 1,   2,   3,   4,   5,   6)
Turkey <- c(60,   9,   4,   2,   0,   1,   0)
nk.T <- Turkey - 0.67 - 0.8*Turkey/sum(Turkey)
ll.T <- length(Turkey)
yT <- log(nk.T/(sum(Turkey)*factorial(ll.T + k-1)/(factorial(ll-1)*factorial(k))))
yT <- log(nk.T/(sum(Turkey)*factorial(ll.T + k-1)/(factorial(ll.T-1)*factorial(k))))
plot(k, yT,xlab = "k", ylab = "log(nk*/N*combn(n,k)", main = "")
plot(k, yT,xlab = "k", ylab = "log(nk*/N*combn(n,k)", main = "")
run.rrline(k, yT, iter = 5)
abline(-1.775255, -2.239024,col = 2)
1 â€“ exp(-2.239024)
1 - exp(-2.239024)
par(mfrow=c(2,2))
n <- 0.75
p <- 0.8934375
yy.NegArg <- n*log(p) + k*log(1-p)
plot(k, yy.NegArg, xlab = "k", ylab = "log(p) + k*log(1-p))",main = "Neg. Binomial n = 0.75 Plot - Turkey")
run.rrline(k, yy.NegArg, iter = 5)
abline(-0.08450917, -2.239024,col = 2)
n <- 0.5
p <- 0.8934375
yy.NegArg <- n*log(p) + k*log(1-p)
plot(k, yy.NegArg, xlab = "k", ylab = "log(p) + k*log(1-p))",main = "Neg. Binomial n = 0.5 Plot - Turkey")
run.rrline(k, yy.NegArg, iter = 5)
abline(-0.05633945, -2.239024,col = 2)
n <- 0.25
p <- 0.8934375
yy.NegArg <- n*log(p) + k*log(1-p)
plot(k, yy.NegArg, xlab = "k", ylab = "log(p) + k*log(1-p))",main = "Neg. Binomial n = 0.25 Plot - Turkey")
run.rrline(k, yy.NegArg, iter = 5)
abline(-0.02816972, -2.239024,col = 2)
kk <- c(0,1,2,3,4,5,6,7,8,9)
nk <- c(2303,831, 565, 212, 67, 23, 15, 3, 1, 1)
NN <- 4021
yy <- log(nk.S/(sum(nk)**factorial(10 + kk-1)/(factorial(10-1)*factorial(kk))))
yy <- log(nk.S/(sum(nk)*factorial(10 + kk-1)/(factorial(10-1)*factorial(kk))))
nk.S <- nk - 0.67 - 0.8*nk/sum(nk)
yy <- log(nk.S/(sum(nk)*factorial(10 + kk-1)/(factorial(10-1)*factorial(kk))))
plot(kk, yy,xlab = "k", ylab = "log(nk*/N*combn(n+k-1,k)", main = "")
run.rrline(kk, yy, iter = 5)
abline(-1.676834, -2.165919,col = 2)
1 - exp(-2.165919)
par(mfrow=c(2,2))
n <- 0.75
p <- 0.8853555
yy <- n*log(p) + kk*log(1-p)
plot(kk, yy, xlab = "k", ylab = "log(p) + k*log(1-p))",main = "Neg. Binomial n = 0.75 Plot")
run.rrline(kk, yy, iter = 5)
abline(-0.09132451, -2.165919,col = 2)
n <- 0.5
p <- 0.8853555
yy <- n*log(p) + kk*log(1-p)
plot(kk, yy, xlab = "k", ylab = "log(p) + k*log(1-p))",main = "Neg. Binomial n = 0.5 Plot")
run.rrline(kk, yy, iter = 5)
abline(-0.06088301, -2.165919,col = 2)
n <- 0.25
p <- 0.8853555
yy <- n*log(p) + kk*log(1-p)
plot(kk, yy, xlab = "k", ylab = "log(p) + k*log(1-p))",main = "Neg. Binomial n = 0.25 Plot")
run.rrline(kk, yy, iter = 5)
abline(-0.0304415, -2.165919,col = 2)
k  <- c(0,  1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12, 13)
nk <- c(0,  0,  15,  92, 131, 147, 143,  99,  88,  55,  34,  17,  15, 20)
N <- 861
nk.A <- nk - 0.67 - 0.8*nk/N
yA <- log(nk.A/(N*factorial(30+k-1)/(factorial(29)*factorial(k))))
plot(k, yA,xlab = "k", ylab = "log(nk*/N*combn(n,k)", main = "")
plot(k, yA,xlab = "k", ylab = "log(nk*/N*combn(n,k)", main = "")
run.rrline(k, yA, iter = 5)
abline(-5.301919, -1.809835,col = 2)
exp(-1.314768)/(exp(-1.314768) + 1)
factorial(-5)
yS <- log(nk.H/(sum(H))) - log(0.8249453) - kH*log(1-0.8249453)
plot(kH, yS, xlab = "k", ylab = "y")
setwd("~/Desktop/Cultural_Mapper-master/Louvain")
install.packages("spam")
install.packages("igraph")
install.packages("qlcMatrix")
install.packages("networkD3")
library(spam)
library(igraph)
library(qlcMatrix)
library(networkD3)
tdm <- read.MM('en_corpus.mm')
tdm1 <- t(tdm)
ncol(tdm1)
tdm1 <- tdm1[, sample(ncol(tdm1), 500)]
ncol(tdm1)
tdm1 <- as.matrix(tdm1)
cosine_sim_mat <- cosSparse(tdm1, norm = norm2)
#cosine_sim_mat <- as.matrix(cosine_sim_mat)
####
ig <- graph.adjacency(cosine_sim_mat, mode="undirected", weighted=TRUE)
louvain <- cluster_louvain(graph = ig)
louvain_sizesComm <- sizes(louvain)
louvain_numComm <- length(louvain_sizesComm)
louvain_modularity <- modularity(louvain)
print(louvain_numComm)
print(louvain_sizesComm)
print(louvain_modularity)
class(louvain$memberships)
memberships <- membership(louvain)
network.result <- as.data.frame(cbind(names(memberships), membership(louvain)))
names(network.result) <- c("group_assignment")
id <- c(1:500)
network.result <- cbind(id,network.result)
simpleNetwork(network.result)
louvain$membership
cosine_sim_mat <- as.data.frame(cosine_sim_mat)
cosine_sim_mat <- as.matrix(cosine_sim_mat)
cosine_sim_mat <- as.data.frame(cosine_sim_mat)
simpleNetwork(cosine_sim_mat)
simpleNetwork(network.result)
V(ig)$color <- louvain$membership + 1
plot(ig)
tkplot(ig)
tkplot(ig,cex = 0.5)
tkplot(ig,pch = 1)
tkplot(ig,vertex.size = 1)
tkplot(ig,vertex.size = 5, vertex.label.dist = 1)
plot(ig,vertex.size = 5, vertex.label.dist = 1)
V(ig)$color <- louvain$membership + 1
#plot(ig,vertex.size = 5, vertex.label.dist = 1)
plot(x = louvain, y = ig, edge.width = 1, vertex.size = 4,
vertex.label = NA, mark.groups = NULL, layout = karateLayout)
plot(x = louvain, y = ig, edge.width = 1, vertex.size = 4,
vertex.label = NA, mark.groups = NULL)
plot(x = louvain, y = ig, vertex.size = 10)
edge.weights <- function(community, network, weight.within = 100, weight.between = 1) {
bridges <- crossing(communities = community, graph = network)
weights <- ifelse(test = bridges, yes = weight.between, no = weight.within)
return(weights)
}
E(ig)$weight <- edge.weights(louvain, ig)
plot(x = louvain, y = ig, edge.width = 1, vertex.size = 10,
mark.groups = NULL)
polyroot(c(1,-8/3,-1))
polyroot(c(1,-9/4,-9/4))
polyroot(c(1,-3,-1/9,-1/3))
polyroot(c(1,-3,1/9,-1/3))
